2024/04/13 09:49:38 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.8 (default, Apr 13 2021, 19:58:26) [GCC 7.3.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 5231001
    GPU 0: NVIDIA A40
    CUDA_HOME: /usr/local/cuda-11.7
    NVCC: Cuda compilation tools, release 11.7, V11.7.64
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.0.1
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.7.3 (Git Hash 6dbeffbae1f23cbbeae17adb7b5b13f1f37c080e)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_DISABLE_GPU_ASSERTS=ON, TORCH_VERSION=2.0.1, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

    TorchVision: 0.15.2
    OpenCV: 4.9.0
    MMEngine: 0.10.3

Runtime environment:
    cudnn_benchmark: True
    dist_cfg: {'backend': 'nccl'}
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    seed: 5231001
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/04/13 09:49:39 - mmengine - INFO - Config:
backbone_norm_cfg = dict(requires_grad=True, type='LN')
checkpoint_file = 'pretrained/swin/swin_tiny_patch4_window7_224_20220317-1cdeb081.pth'
crop_size = (
    256,
    256,
)
data_preprocessor = dict(
    mean=[
        123.675,
        116.28,
        103.53,
        123.675,
        116.28,
        103.53,
    ],
    size=(
        256,
        256,
    ),
    std=[
        58.395,
        57.12,
        57.375,
        58.395,
        57.12,
        57.375,
    ],
    type='SegDataPreProcessor')
data_root = '/home/bubai/Data/LEVIR-CD/LEVIR-CD256256CLIP'
dataset_type = 'TXTCDDatasetJSON'
default_hooks = dict(
    checkpoint=dict(
        by_epoch=False, interval=4000, save_best='mIoU',
        type='CheckpointHook'),
    logger=dict(interval=10, log_metric_by_epoch=False, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(draw=True, type='SegVisualizationHook'))
default_scope = 'mmseg'
env_cfg = dict(
    cudnn_benchmark=True,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
find_unused_parameters = True
launcher = 'none'
load_from = 'work_dirs/clipformer_opt_sub_cwal_vitjson_levir_40k2/iter_40000.pth'
log_level = 'INFO'
log_processor = dict(by_epoch=False)
metainfo = dict(
    classes=(
        'background',
        'building',
    ),
    palette=[
        [
            0,
            0,
            0,
        ],
        [
            255,
            255,
            255,
        ],
    ])
model = dict(
    backbone=dict(
        act_cfg=dict(type='GELU'),
        attn_drop_rate=0.0,
        depths=[
            2,
            2,
            6,
            2,
        ],
        drop_path_rate=0.3,
        drop_rate=0.0,
        embed_dims=96,
        init_cfg=dict(
            checkpoint=
            'pretrained/swin/swin_tiny_patch4_window7_224_20220317-1cdeb081.pth',
            type='Pretrained'),
        input_resolution=512,
        layers=[
            3,
            4,
            6,
            3,
        ],
        mlp_ratio=4,
        norm_cfg=dict(requires_grad=True, type='LN'),
        num_heads=[
            3,
            6,
            12,
            24,
        ],
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        output_dim=1024,
        patch_norm=True,
        patch_size=4,
        pretrain_img_size=224,
        qk_scale=None,
        qkv_bias=True,
        strides=(
            4,
            2,
            2,
            2,
        ),
        style='pytorch',
        type='CLIPSwinWithAttention',
        use_abs_pos_embed=False,
        window_size=7),
    context_decoder=dict(
        context_length=16,
        dropout=0.1,
        outdim=512,
        style='pytorch',
        transformer_heads=4,
        transformer_layers=3,
        transformer_width=256,
        type='ContextDecoder',
        visual_dim=512),
    context_length=64,
    decode_head=dict(
        align_corners=False,
        channels=256,
        depth=1,
        dim=256,
        dropout_ratio=0.1,
        embed_dim=256,
        in_channels=[
            256,
            256,
            256,
            256,
        ],
        in_index=[
            0,
            1,
            2,
            3,
        ],
        input_transform='multiple_select',
        loss_decode=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
        norm_cfg=dict(requires_grad=True, type='BN'),
        num_classes=2,
        num_heads=8,
        patches_resolution=128,
        split_size=4,
        text_dim=512,
        type='CSwinTextDecode'),
    minus_channel=[
        96,
        192,
        384,
        770,
    ],
    neck=dict(
        in_channels=[
            192,
            384,
            768,
            1540,
        ],
        num_outs=4,
        out_channels=256,
        type='FPN'),
    pretrained='pretrained/ViT-B-16.pt',
    test_cfg=dict(mode='whole'),
    text_dim=512,
    text_encoder=dict(
        context_length=77,
        embed_dim=512,
        style='pytorch',
        transformer_heads=8,
        transformer_layers=12,
        transformer_width=512,
        type='CLIPTextContextEncoder'),
    text_head=False,
    train_cfg=dict(),
    type='ChangeCLIP')
norm_cfg = dict(requires_grad=True, type='BN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=0.0001, type='AdamW', weight_decay=0.01),
    paramwise_cfg=dict(
        custom_keys=dict(
            absolute_pos_embed=dict(decay_mult=0.0),
            norm=dict(decay_mult=0.0),
            relative_position_bias_table=dict(decay_mult=0.0))),
    type='OptimWrapper')
optimizer = dict(lr=0.01, momentum=0.9, type='SGD', weight_decay=0.0005)
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=1500, start_factor=1e-06,
        type='LinearLR'),
    dict(
        begin=1500,
        by_epoch=False,
        end=40000,
        eta_min=0.0,
        power=1.0,
        type='PolyLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='test.txt',
        data_prefix=dict(
            img_path='test/A', img_path2='test/B', seg_map_path='test/label'),
        data_root='/home/bubai/Data/LEVIR-CD/LEVIR-CD256256CLIP',
        metainfo=dict(
            classes=(
                'background',
                'building',
            ),
            palette=[
                [
                    0,
                    0,
                    0,
                ],
                [
                    255,
                    255,
                    255,
                ],
            ]),
        pipeline=[
            dict(type='LoadMultipleRSImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(type='ConcatCDInput'),
            dict(type='PackCDInputs'),
        ],
        type='TXTCDDatasetJSON'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    iou_metrics=[
        'mIoU',
        'mDice',
        'mFscore',
    ],
    keep_results=True,
    output_dir='out_infer/clipformer_opt_sub_cwal_vitjson_levir_40k2.py',
    type='IoUMetric')
test_pipeline = [
    dict(type='LoadMultipleRSImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(type='ConcatCDInput'),
    dict(type='PackCDInputs'),
]
train_cfg = dict(max_iters=40000, type='IterBasedTrainLoop', val_interval=4000)
train_dataloader = dict(
    batch_size=16,
    dataset=dict(
        ann_file='train.txt',
        data_prefix=dict(
            img_path='train/A',
            img_path2='train/B',
            seg_map_path='train/label'),
        data_root='/home/bubai/Data/LEVIR-CD/LEVIR-CD256256CLIP',
        metainfo=dict(
            classes=(
                'background',
                'building',
            ),
            palette=[
                [
                    0,
                    0,
                    0,
                ],
                [
                    255,
                    255,
                    255,
                ],
            ]),
        pipeline=[
            dict(type='LoadMultipleRSImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(degree=180, prob=0.5, type='MultiImgRandomRotate'),
            dict(
                cat_max_ratio=0.75,
                crop_size=(
                    256,
                    256,
                ),
                type='MultiImgRandomCrop'),
            dict(direction='horizontal', prob=0.5, type='MultiImgRandomFlip'),
            dict(direction='vertical', prob=0.5, type='MultiImgRandomFlip'),
            dict(
                brightness_delta=10,
                contrast_range=(
                    0.8,
                    1.2,
                ),
                hue_delta=10,
                saturation_range=(
                    0.8,
                    1.2,
                ),
                type='MultiImgPhotoMetricDistortion'),
            dict(type='ConcatCDInput'),
            dict(type='PackCDInputs'),
        ],
        type='TXTCDDatasetJSON'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='InfiniteSampler'))
train_pipeline = [
    dict(type='LoadMultipleRSImageFromFile'),
    dict(type='LoadAnnotations'),
    dict(degree=180, prob=0.5, type='MultiImgRandomRotate'),
    dict(
        cat_max_ratio=0.75, crop_size=(
            256,
            256,
        ), type='MultiImgRandomCrop'),
    dict(direction='horizontal', prob=0.5, type='MultiImgRandomFlip'),
    dict(direction='vertical', prob=0.5, type='MultiImgRandomFlip'),
    dict(
        brightness_delta=10,
        contrast_range=(
            0.8,
            1.2,
        ),
        hue_delta=10,
        saturation_range=(
            0.8,
            1.2,
        ),
        type='MultiImgPhotoMetricDistortion'),
    dict(type='ConcatCDInput'),
    dict(type='PackCDInputs'),
]
tta_model = dict(type='SegTTAModel')
tta_pipeline = [
    dict(type='LoadMultipleRSImageFromFile'),
    dict(
        transforms=[
            [
                dict(type='LoadAnnotations'),
            ],
            [
                dict(type='ConcatCDInput'),
            ],
            [
                dict(type='PackCDInputs'),
            ],
        ],
        type='TestTimeAug'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=1,
    dataset=dict(
        ann_file='val.txt',
        data_prefix=dict(
            img_path='test/A', img_path2='test/B', seg_map_path='test/label'),
        data_root='/home/bubai/Data/LEVIR-CD/LEVIR-CD256256CLIP',
        metainfo=dict(
            classes=(
                'background',
                'building',
            ),
            palette=[
                [
                    0,
                    0,
                    0,
                ],
                [
                    255,
                    255,
                    255,
                ],
            ]),
        pipeline=[
            dict(type='LoadMultipleRSImageFromFile'),
            dict(type='LoadAnnotations'),
            dict(type='ConcatCDInput'),
            dict(type='PackCDInputs'),
        ],
        type='TXTCDDatasetJSON'),
    num_workers=4,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    iou_metrics=[
        'mIoU',
        'mDice',
        'mFscore',
    ], type='IoUMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
]
visualizer = dict(
    name='visualizer',
    save_dir='out_infer/clipformer_opt_sub_cwal_vitjson_levir_40k2.py',
    type='SegLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
    ])
work_dir = 'out_infer/clipformer_opt_sub_cwal_vitjson_levir_40k2.py'

2024/04/13 09:49:44 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/04/13 09:49:44 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) SegVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/04/13 09:49:45 - mmengine - WARNING - The prefix is not set in metric class IoUMetric.
2024/04/13 09:49:47 - mmengine - INFO - Load checkpoint from work_dirs/clipformer_opt_sub_cwal_vitjson_levir_40k2/iter_40000.pth
2024/04/13 09:49:54 - mmengine - INFO - Iter(test) [  10/2048]    eta: 0:22:23  time: 0.6594  data_time: 0.0186  memory: 8998  
2024/04/13 09:49:54 - mmengine - INFO - Iter(test) [  20/2048]    eta: 0:12:38  time: 0.0891  data_time: 0.0016  memory: 856  
2024/04/13 09:49:55 - mmengine - INFO - Iter(test) [  30/2048]    eta: 0:09:23  time: 0.0899  data_time: 0.0016  memory: 856  
2024/04/13 09:49:56 - mmengine - INFO - Iter(test) [  40/2048]    eta: 0:07:45  time: 0.0886  data_time: 0.0016  memory: 856  
2024/04/13 09:49:58 - mmengine - INFO - Iter(test) [  50/2048]    eta: 0:06:47  time: 0.0923  data_time: 0.0016  memory: 856  
2024/04/13 09:49:59 - mmengine - INFO - Iter(test) [  60/2048]    eta: 0:06:39  time: 0.1855  data_time: 0.0925  memory: 856  
2024/04/13 09:50:00 - mmengine - INFO - Iter(test) [  70/2048]    eta: 0:06:05  time: 0.0889  data_time: 0.0016  memory: 856  
2024/04/13 09:50:01 - mmengine - INFO - Iter(test) [  80/2048]    eta: 0:05:40  time: 0.0919  data_time: 0.0017  memory: 856  
2024/04/13 09:50:02 - mmengine - INFO - Iter(test) [  90/2048]    eta: 0:05:21  time: 0.0923  data_time: 0.0019  memory: 856  
2024/04/13 09:50:03 - mmengine - INFO - Iter(test) [ 100/2048]    eta: 0:05:05  time: 0.0925  data_time: 0.0018  memory: 856  
2024/04/13 09:50:04 - mmengine - INFO - Iter(test) [ 110/2048]    eta: 0:04:54  time: 0.1013  data_time: 0.0086  memory: 856  
2024/04/13 09:50:05 - mmengine - INFO - Iter(test) [ 120/2048]    eta: 0:04:43  time: 0.0943  data_time: 0.0019  memory: 856  
2024/04/13 09:50:06 - mmengine - INFO - Iter(test) [ 130/2048]    eta: 0:04:34  time: 0.0955  data_time: 0.0020  memory: 856  
2024/04/13 09:50:06 - mmengine - INFO - Iter(test) [ 140/2048]    eta: 0:04:25  time: 0.0877  data_time: 0.0018  memory: 856  
2024/04/13 09:50:07 - mmengine - INFO - Iter(test) [ 150/2048]    eta: 0:04:18  time: 0.0914  data_time: 0.0019  memory: 856  
2024/04/13 09:50:08 - mmengine - INFO - Iter(test) [ 160/2048]    eta: 0:04:12  time: 0.1025  data_time: 0.0091  memory: 856  
2024/04/13 09:50:09 - mmengine - INFO - Iter(test) [ 170/2048]    eta: 0:04:06  time: 0.0913  data_time: 0.0017  memory: 856  
2024/04/13 09:50:10 - mmengine - INFO - Iter(test) [ 180/2048]    eta: 0:04:01  time: 0.0932  data_time: 0.0018  memory: 856  
2024/04/13 09:50:11 - mmengine - INFO - Iter(test) [ 190/2048]    eta: 0:03:56  time: 0.0922  data_time: 0.0017  memory: 856  
2024/04/13 09:50:12 - mmengine - INFO - Iter(test) [ 200/2048]    eta: 0:03:51  time: 0.0903  data_time: 0.0017  memory: 856  
2024/04/13 09:50:13 - mmengine - INFO - Iter(test) [ 210/2048]    eta: 0:03:48  time: 0.1028  data_time: 0.0090  memory: 856  
2024/04/13 09:50:14 - mmengine - INFO - Iter(test) [ 220/2048]    eta: 0:03:45  time: 0.0962  data_time: 0.0027  memory: 856  
2024/04/13 09:50:15 - mmengine - INFO - Iter(test) [ 230/2048]    eta: 0:03:41  time: 0.0963  data_time: 0.0017  memory: 856  
2024/04/13 09:50:16 - mmengine - INFO - Iter(test) [ 240/2048]    eta: 0:03:38  time: 0.0931  data_time: 0.0016  memory: 856  
2024/04/13 09:50:17 - mmengine - INFO - Iter(test) [ 250/2048]    eta: 0:03:35  time: 0.0913  data_time: 0.0016  memory: 856  
2024/04/13 09:50:18 - mmengine - INFO - Iter(test) [ 260/2048]    eta: 0:03:32  time: 0.1008  data_time: 0.0076  memory: 856  
2024/04/13 09:50:19 - mmengine - INFO - Iter(test) [ 270/2048]    eta: 0:03:29  time: 0.0918  data_time: 0.0016  memory: 856  
2024/04/13 09:50:20 - mmengine - INFO - Iter(test) [ 280/2048]    eta: 0:03:26  time: 0.0906  data_time: 0.0017  memory: 856  
2024/04/13 09:50:21 - mmengine - INFO - Iter(test) [ 290/2048]    eta: 0:03:24  time: 0.0930  data_time: 0.0017  memory: 856  
2024/04/13 09:50:22 - mmengine - INFO - Iter(test) [ 300/2048]    eta: 0:03:21  time: 0.0903  data_time: 0.0016  memory: 856  
2024/04/13 09:50:22 - mmengine - INFO - Iter(test) [ 310/2048]    eta: 0:03:18  time: 0.0913  data_time: 0.0083  memory: 856  
2024/04/13 09:50:23 - mmengine - INFO - Iter(test) [ 320/2048]    eta: 0:03:16  time: 0.0901  data_time: 0.0016  memory: 856  
2024/04/13 09:50:24 - mmengine - INFO - Iter(test) [ 330/2048]    eta: 0:03:14  time: 0.0890  data_time: 0.0016  memory: 856  
2024/04/13 09:50:25 - mmengine - INFO - Iter(test) [ 340/2048]    eta: 0:03:11  time: 0.0919  data_time: 0.0022  memory: 856  
2024/04/13 09:50:26 - mmengine - INFO - Iter(test) [ 350/2048]    eta: 0:03:09  time: 0.0921  data_time: 0.0019  memory: 856  
2024/04/13 09:50:27 - mmengine - INFO - Iter(test) [ 360/2048]    eta: 0:03:08  time: 0.1006  data_time: 0.0086  memory: 856  
2024/04/13 09:50:28 - mmengine - INFO - Iter(test) [ 370/2048]    eta: 0:03:06  time: 0.0922  data_time: 0.0017  memory: 856  
2024/04/13 09:50:29 - mmengine - INFO - Iter(test) [ 380/2048]    eta: 0:03:04  time: 0.0925  data_time: 0.0017  memory: 856  
2024/04/13 09:50:30 - mmengine - INFO - Iter(test) [ 390/2048]    eta: 0:03:02  time: 0.0921  data_time: 0.0018  memory: 856  
2024/04/13 09:50:31 - mmengine - INFO - Iter(test) [ 400/2048]    eta: 0:03:00  time: 0.0924  data_time: 0.0016  memory: 856  
2024/04/13 09:50:32 - mmengine - INFO - Iter(test) [ 410/2048]    eta: 0:02:59  time: 0.1010  data_time: 0.0089  memory: 856  
2024/04/13 09:50:33 - mmengine - INFO - Iter(test) [ 420/2048]    eta: 0:02:57  time: 0.0940  data_time: 0.0018  memory: 856  
2024/04/13 09:50:34 - mmengine - INFO - Iter(test) [ 430/2048]    eta: 0:02:55  time: 0.0950  data_time: 0.0017  memory: 856  
2024/04/13 09:50:35 - mmengine - INFO - Iter(test) [ 440/2048]    eta: 0:02:54  time: 0.0948  data_time: 0.0018  memory: 856  
2024/04/13 09:50:36 - mmengine - INFO - Iter(test) [ 450/2048]    eta: 0:02:52  time: 0.0919  data_time: 0.0017  memory: 856  
2024/04/13 09:50:37 - mmengine - INFO - Iter(test) [ 460/2048]    eta: 0:02:51  time: 0.0988  data_time: 0.0091  memory: 856  
2024/04/13 09:50:37 - mmengine - INFO - Iter(test) [ 470/2048]    eta: 0:02:49  time: 0.0910  data_time: 0.0016  memory: 856  
2024/04/13 09:50:38 - mmengine - INFO - Iter(test) [ 480/2048]    eta: 0:02:47  time: 0.0923  data_time: 0.0017  memory: 856  
2024/04/13 09:50:39 - mmengine - INFO - Iter(test) [ 490/2048]    eta: 0:02:46  time: 0.0927  data_time: 0.0017  memory: 856  
2024/04/13 09:50:40 - mmengine - INFO - Iter(test) [ 500/2048]    eta: 0:02:44  time: 0.0942  data_time: 0.0017  memory: 856  
2024/04/13 09:50:41 - mmengine - INFO - Iter(test) [ 510/2048]    eta: 0:02:43  time: 0.1013  data_time: 0.0089  memory: 856  
2024/04/13 09:50:42 - mmengine - INFO - Iter(test) [ 520/2048]    eta: 0:02:42  time: 0.0895  data_time: 0.0017  memory: 856  
2024/04/13 09:50:43 - mmengine - INFO - Iter(test) [ 530/2048]    eta: 0:02:40  time: 0.0936  data_time: 0.0018  memory: 856  
2024/04/13 09:50:44 - mmengine - INFO - Iter(test) [ 540/2048]    eta: 0:02:39  time: 0.0912  data_time: 0.0017  memory: 856  
2024/04/13 09:50:45 - mmengine - INFO - Iter(test) [ 550/2048]    eta: 0:02:37  time: 0.0886  data_time: 0.0019  memory: 856  
2024/04/13 09:50:46 - mmengine - INFO - Iter(test) [ 560/2048]    eta: 0:02:36  time: 0.0993  data_time: 0.0074  memory: 856  
2024/04/13 09:50:47 - mmengine - INFO - Iter(test) [ 570/2048]    eta: 0:02:35  time: 0.0918  data_time: 0.0020  memory: 856  
2024/04/13 09:50:48 - mmengine - INFO - Iter(test) [ 580/2048]    eta: 0:02:33  time: 0.0948  data_time: 0.0018  memory: 856  
2024/04/13 09:50:49 - mmengine - INFO - Iter(test) [ 590/2048]    eta: 0:02:32  time: 0.0890  data_time: 0.0018  memory: 856  
2024/04/13 09:50:50 - mmengine - INFO - Iter(test) [ 600/2048]    eta: 0:02:31  time: 0.0918  data_time: 0.0020  memory: 856  
2024/04/13 09:50:51 - mmengine - INFO - Iter(test) [ 610/2048]    eta: 0:02:29  time: 0.1011  data_time: 0.0089  memory: 856  
2024/04/13 09:50:51 - mmengine - INFO - Iter(test) [ 620/2048]    eta: 0:02:28  time: 0.0919  data_time: 0.0016  memory: 856  
2024/04/13 09:50:52 - mmengine - INFO - Iter(test) [ 630/2048]    eta: 0:02:27  time: 0.0938  data_time: 0.0017  memory: 856  
2024/04/13 09:50:53 - mmengine - INFO - Iter(test) [ 640/2048]    eta: 0:02:26  time: 0.0936  data_time: 0.0020  memory: 856  
2024/04/13 09:50:54 - mmengine - INFO - Iter(test) [ 650/2048]    eta: 0:02:24  time: 0.0902  data_time: 0.0017  memory: 856  
2024/04/13 09:50:55 - mmengine - INFO - Iter(test) [ 660/2048]    eta: 0:02:23  time: 0.1015  data_time: 0.0090  memory: 856  
2024/04/13 09:50:56 - mmengine - INFO - Iter(test) [ 670/2048]    eta: 0:02:22  time: 0.0911  data_time: 0.0017  memory: 856  
2024/04/13 09:50:57 - mmengine - INFO - Iter(test) [ 680/2048]    eta: 0:02:21  time: 0.0935  data_time: 0.0018  memory: 856  
2024/04/13 09:50:58 - mmengine - INFO - Iter(test) [ 690/2048]    eta: 0:02:19  time: 0.0939  data_time: 0.0020  memory: 856  
2024/04/13 09:50:59 - mmengine - INFO - Iter(test) [ 700/2048]    eta: 0:02:18  time: 0.0906  data_time: 0.0017  memory: 856  
2024/04/13 09:51:00 - mmengine - INFO - Iter(test) [ 710/2048]    eta: 0:02:17  time: 0.0977  data_time: 0.0090  memory: 856  
2024/04/13 09:51:01 - mmengine - INFO - Iter(test) [ 720/2048]    eta: 0:02:16  time: 0.0976  data_time: 0.0019  memory: 856  
2024/04/13 09:51:02 - mmengine - INFO - Iter(test) [ 730/2048]    eta: 0:02:15  time: 0.0935  data_time: 0.0017  memory: 856  
2024/04/13 09:51:03 - mmengine - INFO - Iter(test) [ 740/2048]    eta: 0:02:13  time: 0.0928  data_time: 0.0017  memory: 856  
2024/04/13 09:51:04 - mmengine - INFO - Iter(test) [ 750/2048]    eta: 0:02:12  time: 0.0923  data_time: 0.0017  memory: 856  
2024/04/13 09:51:05 - mmengine - INFO - Iter(test) [ 760/2048]    eta: 0:02:11  time: 0.0986  data_time: 0.0088  memory: 856  
2024/04/13 09:51:06 - mmengine - INFO - Iter(test) [ 770/2048]    eta: 0:02:10  time: 0.0920  data_time: 0.0017  memory: 856  
2024/04/13 09:51:07 - mmengine - INFO - Iter(test) [ 780/2048]    eta: 0:02:09  time: 0.0897  data_time: 0.0016  memory: 856  
2024/04/13 09:51:07 - mmengine - INFO - Iter(test) [ 790/2048]    eta: 0:02:08  time: 0.0918  data_time: 0.0017  memory: 856  
2024/04/13 09:51:08 - mmengine - INFO - Iter(test) [ 800/2048]    eta: 0:02:06  time: 0.0938  data_time: 0.0018  memory: 856  
2024/04/13 09:51:09 - mmengine - INFO - Iter(test) [ 810/2048]    eta: 0:02:05  time: 0.0984  data_time: 0.0091  memory: 856  
2024/04/13 09:51:10 - mmengine - INFO - Iter(test) [ 820/2048]    eta: 0:02:04  time: 0.0939  data_time: 0.0023  memory: 856  
2024/04/13 09:51:11 - mmengine - INFO - Iter(test) [ 830/2048]    eta: 0:02:03  time: 0.0936  data_time: 0.0017  memory: 856  
2024/04/13 09:51:12 - mmengine - INFO - Iter(test) [ 840/2048]    eta: 0:02:02  time: 0.0889  data_time: 0.0017  memory: 856  
2024/04/13 09:51:13 - mmengine - INFO - Iter(test) [ 850/2048]    eta: 0:02:01  time: 0.0931  data_time: 0.0017  memory: 856  
2024/04/13 09:51:14 - mmengine - INFO - Iter(test) [ 860/2048]    eta: 0:02:00  time: 0.1007  data_time: 0.0090  memory: 856  
2024/04/13 09:51:15 - mmengine - INFO - Iter(test) [ 870/2048]    eta: 0:01:59  time: 0.0920  data_time: 0.0016  memory: 856  
2024/04/13 09:51:16 - mmengine - INFO - Iter(test) [ 880/2048]    eta: 0:01:58  time: 0.0923  data_time: 0.0018  memory: 856  
2024/04/13 09:51:17 - mmengine - INFO - Iter(test) [ 890/2048]    eta: 0:01:56  time: 0.0917  data_time: 0.0018  memory: 856  
2024/04/13 09:51:18 - mmengine - INFO - Iter(test) [ 900/2048]    eta: 0:01:55  time: 0.0913  data_time: 0.0016  memory: 856  
2024/04/13 09:51:19 - mmengine - INFO - Iter(test) [ 910/2048]    eta: 0:01:54  time: 0.0934  data_time: 0.0077  memory: 856  
2024/04/13 09:51:20 - mmengine - INFO - Iter(test) [ 920/2048]    eta: 0:01:53  time: 0.0914  data_time: 0.0017  memory: 856  
2024/04/13 09:51:21 - mmengine - INFO - Iter(test) [ 930/2048]    eta: 0:01:52  time: 0.0921  data_time: 0.0017  memory: 856  
2024/04/13 09:51:21 - mmengine - INFO - Iter(test) [ 940/2048]    eta: 0:01:51  time: 0.0896  data_time: 0.0017  memory: 856  
2024/04/13 09:51:22 - mmengine - INFO - Iter(test) [ 950/2048]    eta: 0:01:50  time: 0.0939  data_time: 0.0018  memory: 856  
2024/04/13 09:51:23 - mmengine - INFO - Iter(test) [ 960/2048]    eta: 0:01:49  time: 0.0994  data_time: 0.0077  memory: 856  
2024/04/13 09:51:24 - mmengine - INFO - Iter(test) [ 970/2048]    eta: 0:01:48  time: 0.0881  data_time: 0.0018  memory: 856  
2024/04/13 09:51:25 - mmengine - INFO - Iter(test) [ 980/2048]    eta: 0:01:46  time: 0.0913  data_time: 0.0018  memory: 856  
2024/04/13 09:51:26 - mmengine - INFO - Iter(test) [ 990/2048]    eta: 0:01:45  time: 0.0927  data_time: 0.0019  memory: 856  
2024/04/13 09:51:27 - mmengine - INFO - Iter(test) [1000/2048]    eta: 0:01:44  time: 0.0957  data_time: 0.0018  memory: 856  
2024/04/13 09:51:28 - mmengine - INFO - Iter(test) [1010/2048]    eta: 0:01:43  time: 0.1043  data_time: 0.0125  memory: 856  
2024/04/13 09:51:29 - mmengine - INFO - Iter(test) [1020/2048]    eta: 0:01:42  time: 0.0966  data_time: 0.0016  memory: 856  
2024/04/13 09:51:30 - mmengine - INFO - Iter(test) [1030/2048]    eta: 0:01:41  time: 0.0949  data_time: 0.0017  memory: 856  
2024/04/13 09:51:31 - mmengine - INFO - Iter(test) [1040/2048]    eta: 0:01:40  time: 0.0894  data_time: 0.0017  memory: 856  
2024/04/13 09:51:32 - mmengine - INFO - Iter(test) [1050/2048]    eta: 0:01:39  time: 0.0924  data_time: 0.0020  memory: 856  
2024/04/13 09:51:33 - mmengine - INFO - Iter(test) [1060/2048]    eta: 0:01:38  time: 0.1010  data_time: 0.0075  memory: 856  
2024/04/13 09:51:34 - mmengine - INFO - Iter(test) [1070/2048]    eta: 0:01:37  time: 0.0921  data_time: 0.0018  memory: 856  
2024/04/13 09:51:35 - mmengine - INFO - Iter(test) [1080/2048]    eta: 0:01:36  time: 0.0939  data_time: 0.0018  memory: 856  
2024/04/13 09:51:36 - mmengine - INFO - Iter(test) [1090/2048]    eta: 0:01:35  time: 0.0944  data_time: 0.0019  memory: 856  
2024/04/13 09:51:37 - mmengine - INFO - Iter(test) [1100/2048]    eta: 0:01:34  time: 0.0917  data_time: 0.0022  memory: 856  
2024/04/13 09:51:38 - mmengine - INFO - Iter(test) [1110/2048]    eta: 0:01:33  time: 0.1024  data_time: 0.0094  memory: 856  
2024/04/13 09:51:38 - mmengine - INFO - Iter(test) [1120/2048]    eta: 0:01:32  time: 0.0928  data_time: 0.0020  memory: 856  
2024/04/13 09:51:39 - mmengine - INFO - Iter(test) [1130/2048]    eta: 0:01:31  time: 0.0925  data_time: 0.0017  memory: 856  
2024/04/13 09:51:40 - mmengine - INFO - Iter(test) [1140/2048]    eta: 0:01:30  time: 0.0935  data_time: 0.0020  memory: 856  
2024/04/13 09:51:41 - mmengine - INFO - Iter(test) [1150/2048]    eta: 0:01:29  time: 0.0931  data_time: 0.0018  memory: 856  
2024/04/13 09:51:42 - mmengine - INFO - Iter(test) [1160/2048]    eta: 0:01:28  time: 0.0987  data_time: 0.0090  memory: 856  
2024/04/13 09:51:43 - mmengine - INFO - Iter(test) [1170/2048]    eta: 0:01:27  time: 0.0936  data_time: 0.0019  memory: 856  
2024/04/13 09:51:44 - mmengine - INFO - Iter(test) [1180/2048]    eta: 0:01:26  time: 0.0910  data_time: 0.0016  memory: 856  
2024/04/13 09:51:45 - mmengine - INFO - Iter(test) [1190/2048]    eta: 0:01:25  time: 0.0940  data_time: 0.0016  memory: 856  
2024/04/13 09:51:46 - mmengine - INFO - Iter(test) [1200/2048]    eta: 0:01:24  time: 0.0929  data_time: 0.0017  memory: 856  
2024/04/13 09:51:47 - mmengine - INFO - Iter(test) [1210/2048]    eta: 0:01:23  time: 0.1000  data_time: 0.0081  memory: 856  
2024/04/13 09:51:48 - mmengine - INFO - Iter(test) [1220/2048]    eta: 0:01:22  time: 0.0937  data_time: 0.0018  memory: 856  
2024/04/13 09:51:49 - mmengine - INFO - Iter(test) [1230/2048]    eta: 0:01:21  time: 0.0902  data_time: 0.0017  memory: 856  
2024/04/13 09:51:50 - mmengine - INFO - Iter(test) [1240/2048]    eta: 0:01:19  time: 0.0917  data_time: 0.0017  memory: 856  
2024/04/13 09:51:51 - mmengine - INFO - Iter(test) [1250/2048]    eta: 0:01:18  time: 0.0944  data_time: 0.0018  memory: 856  
2024/04/13 09:51:52 - mmengine - INFO - Iter(test) [1260/2048]    eta: 0:01:17  time: 0.0991  data_time: 0.0079  memory: 856  
2024/04/13 09:51:53 - mmengine - INFO - Iter(test) [1270/2048]    eta: 0:01:16  time: 0.0928  data_time: 0.0017  memory: 856  
2024/04/13 09:51:54 - mmengine - INFO - Iter(test) [1280/2048]    eta: 0:01:15  time: 0.0942  data_time: 0.0017  memory: 856  
2024/04/13 09:51:54 - mmengine - INFO - Iter(test) [1290/2048]    eta: 0:01:14  time: 0.0933  data_time: 0.0018  memory: 856  
2024/04/13 09:51:55 - mmengine - INFO - Iter(test) [1300/2048]    eta: 0:01:13  time: 0.0939  data_time: 0.0017  memory: 856  
2024/04/13 09:51:56 - mmengine - INFO - Iter(test) [1310/2048]    eta: 0:01:12  time: 0.0971  data_time: 0.0073  memory: 856  
2024/04/13 09:51:57 - mmengine - INFO - Iter(test) [1320/2048]    eta: 0:01:11  time: 0.0902  data_time: 0.0018  memory: 856  
2024/04/13 09:51:58 - mmengine - INFO - Iter(test) [1330/2048]    eta: 0:01:10  time: 0.0988  data_time: 0.0028  memory: 856  
2024/04/13 09:51:59 - mmengine - INFO - Iter(test) [1340/2048]    eta: 0:01:09  time: 0.0903  data_time: 0.0017  memory: 856  
2024/04/13 09:52:00 - mmengine - INFO - Iter(test) [1350/2048]    eta: 0:01:08  time: 0.0887  data_time: 0.0016  memory: 856  
2024/04/13 09:52:01 - mmengine - INFO - Iter(test) [1360/2048]    eta: 0:01:07  time: 0.1042  data_time: 0.0094  memory: 856  
2024/04/13 09:52:02 - mmengine - INFO - Iter(test) [1370/2048]    eta: 0:01:06  time: 0.0929  data_time: 0.0018  memory: 856  
2024/04/13 09:52:03 - mmengine - INFO - Iter(test) [1380/2048]    eta: 0:01:05  time: 0.0936  data_time: 0.0017  memory: 856  
2024/04/13 09:52:04 - mmengine - INFO - Iter(test) [1390/2048]    eta: 0:01:04  time: 0.0904  data_time: 0.0022  memory: 856  
2024/04/13 09:52:05 - mmengine - INFO - Iter(test) [1400/2048]    eta: 0:01:03  time: 0.0914  data_time: 0.0024  memory: 856  
2024/04/13 09:52:06 - mmengine - INFO - Iter(test) [1410/2048]    eta: 0:01:02  time: 0.0998  data_time: 0.0076  memory: 856  
2024/04/13 09:52:07 - mmengine - INFO - Iter(test) [1420/2048]    eta: 0:01:01  time: 0.0906  data_time: 0.0017  memory: 856  
2024/04/13 09:52:08 - mmengine - INFO - Iter(test) [1430/2048]    eta: 0:01:00  time: 0.0913  data_time: 0.0017  memory: 856  
2024/04/13 09:52:09 - mmengine - INFO - Iter(test) [1440/2048]    eta: 0:00:59  time: 0.0936  data_time: 0.0017  memory: 856  
2024/04/13 09:52:10 - mmengine - INFO - Iter(test) [1450/2048]    eta: 0:00:58  time: 0.0973  data_time: 0.0018  memory: 856  
2024/04/13 09:52:11 - mmengine - INFO - Iter(test) [1460/2048]    eta: 0:00:57  time: 0.0964  data_time: 0.0073  memory: 856  
2024/04/13 09:52:11 - mmengine - INFO - Iter(test) [1470/2048]    eta: 0:00:56  time: 0.0935  data_time: 0.0018  memory: 856  
2024/04/13 09:52:12 - mmengine - INFO - Iter(test) [1480/2048]    eta: 0:00:55  time: 0.0904  data_time: 0.0016  memory: 856  
2024/04/13 09:52:13 - mmengine - INFO - Iter(test) [1490/2048]    eta: 0:00:54  time: 0.0920  data_time: 0.0018  memory: 856  
2024/04/13 09:52:14 - mmengine - INFO - Iter(test) [1500/2048]    eta: 0:00:53  time: 0.0923  data_time: 0.0016  memory: 856  
2024/04/13 09:52:15 - mmengine - INFO - Iter(test) [1510/2048]    eta: 0:00:52  time: 0.0998  data_time: 0.0075  memory: 856  
2024/04/13 09:52:16 - mmengine - INFO - Iter(test) [1520/2048]    eta: 0:00:51  time: 0.0933  data_time: 0.0018  memory: 856  
2024/04/13 09:52:17 - mmengine - INFO - Iter(test) [1530/2048]    eta: 0:00:50  time: 0.0944  data_time: 0.0019  memory: 856  
2024/04/13 09:52:18 - mmengine - INFO - Iter(test) [1540/2048]    eta: 0:00:49  time: 0.0928  data_time: 0.0018  memory: 856  
2024/04/13 09:52:19 - mmengine - INFO - Iter(test) [1550/2048]    eta: 0:00:48  time: 0.0915  data_time: 0.0016  memory: 856  
2024/04/13 09:52:20 - mmengine - INFO - Iter(test) [1560/2048]    eta: 0:00:47  time: 0.1000  data_time: 0.0088  memory: 856  
2024/04/13 09:52:21 - mmengine - INFO - Iter(test) [1570/2048]    eta: 0:00:46  time: 0.0936  data_time: 0.0018  memory: 856  
2024/04/13 09:52:22 - mmengine - INFO - Iter(test) [1580/2048]    eta: 0:00:45  time: 0.0923  data_time: 0.0019  memory: 856  
2024/04/13 09:52:23 - mmengine - INFO - Iter(test) [1590/2048]    eta: 0:00:44  time: 0.0892  data_time: 0.0017  memory: 856  
2024/04/13 09:52:24 - mmengine - INFO - Iter(test) [1600/2048]    eta: 0:00:43  time: 0.0926  data_time: 0.0016  memory: 856  
2024/04/13 09:52:25 - mmengine - INFO - Iter(test) [1610/2048]    eta: 0:00:42  time: 0.0968  data_time: 0.0090  memory: 856  
2024/04/13 09:52:25 - mmengine - INFO - Iter(test) [1620/2048]    eta: 0:00:41  time: 0.0915  data_time: 0.0017  memory: 856  
2024/04/13 09:52:26 - mmengine - INFO - Iter(test) [1630/2048]    eta: 0:00:40  time: 0.0908  data_time: 0.0016  memory: 856  
2024/04/13 09:52:27 - mmengine - INFO - Iter(test) [1640/2048]    eta: 0:00:39  time: 0.0886  data_time: 0.0016  memory: 856  
2024/04/13 09:52:28 - mmengine - INFO - Iter(test) [1650/2048]    eta: 0:00:38  time: 0.0907  data_time: 0.0016  memory: 856  
2024/04/13 09:52:29 - mmengine - INFO - Iter(test) [1660/2048]    eta: 0:00:37  time: 0.0943  data_time: 0.0073  memory: 856  
2024/04/13 09:52:30 - mmengine - INFO - Iter(test) [1670/2048]    eta: 0:00:36  time: 0.0897  data_time: 0.0016  memory: 856  
2024/04/13 09:52:31 - mmengine - INFO - Iter(test) [1680/2048]    eta: 0:00:35  time: 0.0903  data_time: 0.0018  memory: 856  
2024/04/13 09:52:32 - mmengine - INFO - Iter(test) [1690/2048]    eta: 0:00:34  time: 0.0897  data_time: 0.0016  memory: 856  
2024/04/13 09:52:33 - mmengine - INFO - Iter(test) [1700/2048]    eta: 0:00:33  time: 0.0923  data_time: 0.0016  memory: 856  
2024/04/13 09:52:34 - mmengine - INFO - Iter(test) [1710/2048]    eta: 0:00:32  time: 0.0975  data_time: 0.0072  memory: 856  
2024/04/13 09:52:35 - mmengine - INFO - Iter(test) [1720/2048]    eta: 0:00:31  time: 0.0895  data_time: 0.0017  memory: 856  
2024/04/13 09:52:36 - mmengine - INFO - Iter(test) [1730/2048]    eta: 0:00:30  time: 0.0913  data_time: 0.0016  memory: 856  
2024/04/13 09:52:36 - mmengine - INFO - Iter(test) [1740/2048]    eta: 0:00:29  time: 0.0895  data_time: 0.0016  memory: 856  
2024/04/13 09:52:37 - mmengine - INFO - Iter(test) [1750/2048]    eta: 0:00:28  time: 0.0919  data_time: 0.0016  memory: 856  
2024/04/13 09:52:38 - mmengine - INFO - Iter(test) [1760/2048]    eta: 0:00:28  time: 0.0959  data_time: 0.0072  memory: 856  
2024/04/13 09:52:39 - mmengine - INFO - Iter(test) [1770/2048]    eta: 0:00:27  time: 0.0904  data_time: 0.0016  memory: 856  
2024/04/13 09:52:40 - mmengine - INFO - Iter(test) [1780/2048]    eta: 0:00:26  time: 0.0916  data_time: 0.0016  memory: 856  
2024/04/13 09:52:41 - mmengine - INFO - Iter(test) [1790/2048]    eta: 0:00:25  time: 0.0897  data_time: 0.0017  memory: 856  
2024/04/13 09:52:42 - mmengine - INFO - Iter(test) [1800/2048]    eta: 0:00:24  time: 0.0924  data_time: 0.0017  memory: 856  
2024/04/13 09:52:43 - mmengine - INFO - Iter(test) [1810/2048]    eta: 0:00:23  time: 0.0983  data_time: 0.0079  memory: 856  
2024/04/13 09:52:44 - mmengine - INFO - Iter(test) [1820/2048]    eta: 0:00:22  time: 0.0927  data_time: 0.0016  memory: 856  
2024/04/13 09:52:45 - mmengine - INFO - Iter(test) [1830/2048]    eta: 0:00:21  time: 0.0912  data_time: 0.0016  memory: 856  
2024/04/13 09:52:46 - mmengine - INFO - Iter(test) [1840/2048]    eta: 0:00:20  time: 0.0881  data_time: 0.0019  memory: 856  
2024/04/13 09:52:47 - mmengine - INFO - Iter(test) [1850/2048]    eta: 0:00:19  time: 0.0913  data_time: 0.0019  memory: 856  
2024/04/13 09:52:48 - mmengine - INFO - Iter(test) [1860/2048]    eta: 0:00:18  time: 0.1011  data_time: 0.0085  memory: 856  
2024/04/13 09:52:48 - mmengine - INFO - Iter(test) [1870/2048]    eta: 0:00:17  time: 0.0891  data_time: 0.0016  memory: 856  
2024/04/13 09:52:49 - mmengine - INFO - Iter(test) [1880/2048]    eta: 0:00:16  time: 0.0931  data_time: 0.0017  memory: 856  
2024/04/13 09:52:50 - mmengine - INFO - Iter(test) [1890/2048]    eta: 0:00:15  time: 0.0926  data_time: 0.0021  memory: 856  
2024/04/13 09:52:51 - mmengine - INFO - Iter(test) [1900/2048]    eta: 0:00:14  time: 0.0926  data_time: 0.0016  memory: 856  
2024/04/13 09:52:52 - mmengine - INFO - Iter(test) [1910/2048]    eta: 0:00:13  time: 0.0972  data_time: 0.0071  memory: 856  
2024/04/13 09:52:53 - mmengine - INFO - Iter(test) [1920/2048]    eta: 0:00:12  time: 0.0890  data_time: 0.0015  memory: 856  
2024/04/13 09:52:54 - mmengine - INFO - Iter(test) [1930/2048]    eta: 0:00:11  time: 0.0901  data_time: 0.0016  memory: 856  
2024/04/13 09:52:55 - mmengine - INFO - Iter(test) [1940/2048]    eta: 0:00:10  time: 0.0858  data_time: 0.0015  memory: 856  
2024/04/13 09:52:56 - mmengine - INFO - Iter(test) [1950/2048]    eta: 0:00:09  time: 0.0886  data_time: 0.0016  memory: 856  
2024/04/13 09:52:57 - mmengine - INFO - Iter(test) [1960/2048]    eta: 0:00:08  time: 0.0994  data_time: 0.0087  memory: 856  
2024/04/13 09:52:58 - mmengine - INFO - Iter(test) [1970/2048]    eta: 0:00:07  time: 0.0891  data_time: 0.0016  memory: 856  
2024/04/13 09:52:59 - mmengine - INFO - Iter(test) [1980/2048]    eta: 0:00:06  time: 0.0899  data_time: 0.0015  memory: 856  
2024/04/13 09:52:59 - mmengine - INFO - Iter(test) [1990/2048]    eta: 0:00:05  time: 0.0886  data_time: 0.0016  memory: 856  
2024/04/13 09:53:00 - mmengine - INFO - Iter(test) [2000/2048]    eta: 0:00:04  time: 0.0884  data_time: 0.0016  memory: 856  
2024/04/13 09:53:01 - mmengine - INFO - Iter(test) [2010/2048]    eta: 0:00:03  time: 0.0997  data_time: 0.0092  memory: 856  
2024/04/13 09:53:02 - mmengine - INFO - Iter(test) [2020/2048]    eta: 0:00:02  time: 0.0878  data_time: 0.0016  memory: 856  
2024/04/13 09:53:03 - mmengine - INFO - Iter(test) [2030/2048]    eta: 0:00:01  time: 0.0918  data_time: 0.0016  memory: 856  
2024/04/13 09:53:04 - mmengine - INFO - Iter(test) [2040/2048]    eta: 0:00:00  time: 0.0889  data_time: 0.0016  memory: 856  
2024/04/13 09:53:05 - mmengine - INFO - per class results:
2024/04/13 09:53:05 - mmengine - INFO - 
+------------+-------+-------+-------+--------+-----------+--------+
|   Class    |  IoU  |  Acc  |  Dice | Fscore | Precision | Recall |
+------------+-------+-------+-------+--------+-----------+--------+
| background | 99.18 | 99.67 | 99.59 | 99.59  |   99.51   | 99.67  |
|  building  |  85.6 | 90.92 | 92.24 | 92.24  |    93.6   | 90.92  |
+------------+-------+-------+-------+--------+-----------+--------+
2024/04/13 09:53:05 - mmengine - INFO - Iter(test) [2048/2048]    aAcc: 99.2200  mIoU: 92.3900  mAcc: 95.2900  mDice: 95.9200  mFscore: 95.9200  mPrecision: 96.5600  mRecall: 95.2900  data_time: 0.0036  time: 0.0965
